q()
library(geoR)
library(gstat)
library(sp)
library(raster)
library(rgdal)
library(RColorBrewer)
data(soja98)
help(soja98)
head(soja98)
data(??soja98)
Install(geoR)
install.packages(geoR)
library(tcltk, lib.loc = "C:/Program Files/R/R-4.0.3/library")
capabilities()["tcltk"]
install.packages(geoR)
data(soja98)
help(soja98)
head(soja98)
library(geoR)
install.packages("geoR")
library(geoR)
library(gstat)
library(sp)
library(raster)
library(rgdal)
library(RColorBrewer)
data(soja98)
help(soja98)
head(soja98)
View(soja98)
View(soja98)
data(soja98)
soja98 <- soja98[, c(1,2,5)] #remove all but k data
coordinates(soja98) <- ~X+Y # covert to spatialpoints data
View(soja98)
View(soja98)
set.seed(4887)
hi <- set.seed(4887)
set.seed(4887)
data(soja98)
help(soja98)
head(soja98)
soja98 <- soja98[, c(1,2,5)] #remove all but k data (Only X Y K data)
coordinates(soja98) <- ~X+Y # covert to spatialpoints data
set.seed(4887)
IDX <- sample(1:nrow(soja98), 150)
IDX
View(soja98)
View(soja98)
data(soja98)
help(soja98)
head(soja98)
soja98_K <- soja98[, c(1,2,5)] #remove all but k data (Only X Y K data)
coordinates(soja98_K) <- ~X+Y # covert to spatialpoints data
set.seed(4887)
IDX <- sample(1:nrow(soja98_K), 150)  # This is a vector if indicies within soja98
# IDX can be used to separate the data in to two datasets
set.seed(4887)  ## random sampling, with specified version
IDX <- sample(1:nrow(soja98_K), 150)  # This is a vector if indicies within soja98
# IDX can be used to separate the data in to two datasets
cal <- soja98_K[IDX, ]
val <- soja98_K[-IDX,]
View(cal)
View(cal)
cal
val
val <- soja98_K[-IDX,]   # evaluaion, give all the none 150 data
cellSize <- 5
range.all <- extent(soja98_K)
View(range.all)
View(range.all)
range.all <- extent(soja98_K) # get xmin, xmax, ymin, ymax
View(range.all)
View(range.all)
grd <- expand.grid(x=seq(range.all[1]-cellSize/2, range.all[2], by=cellSize),
y=seq(range.all[3], range.all[4], by=cellSize)) # make the x gird wider than the expected
View(grd)
View(grd)
coordinates(grd) <- ~x+y
gridded(grd) <- TRUE
View(grd)
View(grd)
#inverse distance
k.idw <- idw(K~1, cal, grd)
spp.idw <- spplot(K.idw, "val.pred", col.regions=cols, cuts = 8)
#Plotting the command
cols <- brewer.pal(9, 'BuPu') #generate colormap
spp.idw <- spplot(K.idw, "val.pred", col.regions=cols, cuts = 8)
K.idw <- idw(K~1, cal, grd)
#Plotting the command
cols <- brewer.pal(9, 'BuPu') #generate colormap
spp.idw <- spplot(K.idw, "val.pred", col.regions=cols, cuts = 8)
cols <- brewer.pal(9, 'BuPu') #generates colorramp
spp.idw <- spplot(K.idw, "var1.pred", col.regions=cols, cuts = 8)
View(spp.idw)
View(spp.idw)
cuts <- spp.idw$panel.args.common$at
#gets coloramp bins from dummy map
lev <- cut(cal$K, breaks=cuts) #determines colors for points ftom cal
pts.1 <- list("sp.points", cal, pch = 24, cex=2, col='black', lwd = 2)
pts.2 <- list("sp.points", cal, pch = 17, cex=2,
col=cols[lev], lwd = 1)
#generates points to represent the calibration locations
spplot(K.idw, "var1.pred", col.regions=cols, cuts = 8,
sp.layout=list(pts.2, pts.1),main = 'Inverse Distance')
#plots final map
r.idw <- raster(K.idw)
k.idw.cal <- extract(r.idw, cal)
#RMSE
RMSE.idw.cal <- sqrt(mean((k.idw.cal-cal$K)^2, na.rm=T))
RMSE.idw.cal
k.idw.cal <- extract(r.idw, cal)
RMSE.idw.cal <- sqrt(mean((k.idw.cal-cal$K)^2, na.rm=T))
k.idw.val <- extract(r.idw, val)
RMSE.idw.val <- sqrt(mean((k.idw.val-val$K)^2, na.rm=T))
RMSE.idw.val
n <- seq(5, 150, by = 5) #vector of sample sizes to simulate
RMSE <- array(NA, length(n)) #vector to store responses
for(i in 1:length(n)){
samp <- sample(1:length(cal), n[i])#random sample of calibration
#inverse distance
K.idw <- idw(K~1, cal[samp ,], grd)
r.idw <- raster(K.idw)
k.idw.val <- extract(r.idw, val)
RMSE.idw.val <- sqrt(mean((k.idw.val-val$K)^2, na.rm=T))
RMSE[i] <- RMSE.idw.val
}
plot(RMSE~n)
variog<- variogram(K~1, cal)
sphr.fit <- fit.variogram(variog, vgm('Sph'))
exp.fit <- fit.variogram(variog, vgm('Exp'))
gamma <- variog$gamma
bins <- variog$dist
gamma.sphr <- variogramLine(sphr.fit, dist_vector = bins)$gamma
gamma.exp <- variogramLine(exp.fit, dist_vector = bins)$gamma
ylim <- range(gamma.sphr, gamma.exp)
plot(bins, gamma)
lines(bins, gamma.sphr, col='blue')
lines(bins, gamma.exp, col='red')
MSE.sph <- mean((gamma-gamma.sphr)^2)
MSE.exp <- mean((gamma-gamma.exp)^2)
sphr.fit
exp.fit
K.sph <-krige(K~1, cal, grd, model=sphr.fit)
K.exp <-krige(K~1, cal, grd, model=exp.fit)
spplot(K.sph,  main = 'Ordinary Kriging, Spherical')
spplot(K.exp, main = 'Ordinary Kriging, exponential')
spplot(K.sph,  main = 'Ordinary Kriging, Spherical')
spplot(K.exp, main = 'Ordinary Kriging, exponential')
r.sph <- raster(K.sph)
k.sph.cal <- extract(r.sph, cal)
k.sph.val <- extract(r.sph, val)
RMSE.sph.cal <- sqrt(mean((k.sph.cal-cal$K)^2, na.rm=T))
RMSE.sph.val <- sqrt(mean((k.sph.val-val$K)^2, na.rm=T))
r.exp <- raster(K.exp)
k.exp.cal <- extract(r.exp, cal)
k.exp.val <- extract(r.exp, val)
RMSE.exp.cal <- sqrt(mean((k.exp.cal-cal$K)^2, na.rm=T))
RMSE.exp.val <- sqrt(mean((k.exp.val-val$K)^2, na.rm=T))
RMSE.sph.cal
RMSE.sph.val
RMSE.exp.cal
summary(soja98$P)
plot(cars)
x <- 10
typeof(x)
x <- 10
typeof(x)
mode(x)
x <- 10
typeof(x)
mode(x)
storage.mode(x)
class(x)
x <- 10
typeof(x) #hi
mode(x)
storage.mode(x)
class(x)
x <- 10
typeof(x) #hi
mode(x)
storage.mode(x)
class(x)
y <- as.integer(10)
typeof(y)
x <- 1:10
x <- 1:10  #sequence from 1 to 10
y <- 1:10 - 1 #Sequence from 0 to 9
z <- seq(1,10,2)
x <- 1:10  #sequence from 1 to 10
y <- 1:10 - 1 #Sequence from 0 to 9
z <- seq(1,10,2)
x <- 1:10  #sequence from 1 to 10
y <- 1:10 - 1 #Sequence from 0 to 9
z <- seq(1,10,2)
z <- seq(1,10,2)
x <- 1:10  #sequence from 1 to 10
y <- 1:10 - 1 #Sequence from 0 to 9
z <- seq(1,10,2)
z <- seq(1,10,2)
z <- seq(1,10,2)
plot(cars)
x <- 10
typeof(x) #hi
mode(x)
storage.mode(x)
class(x)
y <- as.integer(10)
typeof(y)
plot(cars)
x <- 10
typeof(x) #hi
mode(x)
storage.mode(x)
class(x)
y <- as.integer(10)
typeof(y)
y
z
y <- as.integer(10)
y <- as.integer(10)
typeof(y)
#set working directory
setwd("C:/Users/tao_1/OneDrive/Documents/Fall2021/ABE305_Final_Project/Data")
#Necessary packages
library(tidyverse)
library(ggpubr) #For plotting
df_266 <- read.csv("266.csv", skip = 7)
df_267 <- read.csv("267.csv", skip = 7)
df_268 <- read.csv("268.csv", skip = 7)
ggplot(df_266, aes(x = mm, y = N)) +
geom_point(color = "blue") +
ggtitle("Load(N) vs. extension of geotextile material") +
theme(plot.title = element_text(hjust = 0.5)) +
xlab("Extension (mm)") +
ylab("Load (N)")
ggplot(df_266, aes(x = mm, y = N)) +
geom_point(color = "blue") +
ggtitle("Load(N) vs. extension of geotextile material") +
theme(plot.title = element_text(hjust = 0.5)) +
xlab("Extension (mm)") +
ylab("Load (N)") +
geom_point(df_267, aes(x = mm, y = N))
ggplot(df_266, aes(x = mm, y = N)) +
geom_point(color = "blue") +
ggtitle("Load(N) vs. extension of geotextile material") +
theme(plot.title = element_text(hjust = 0.5)) +
xlab("Extension (mm)") +
ylab("Load (N)")
ggplot(df_266, aes(x = mm, y = N)) +
geom_point(color = "blue") +
ggtitle("Load(N) vs. extension of geotextile material") +
theme(plot.title = element_text(hjust = 0.5)) +
xlab("Extension (mm)") +
ylab("Load (N)") +
geom_point(df_267, aes(x = mm, y = N))
rlang::last_error()
rlang::last_trace()
ggplot(df_266, aes(x = mm, y = N)) +
geom_point(color = "blue") +
geom_point(df_267, aes(x = mm, y = N)) +
ggtitle("Load(N) vs. extension of geotextile material") +
theme(plot.title = element_text(hjust = 0.5)) +
xlab("Extension (mm)") +
ylab("Load (N)")
ggplot() +
geom_point(df_266, aes(x = mm, y = N), color = "blue") +
geom_point(df_267, aes(x = mm, y = N)) +
ggtitle("Load(N) vs. extension of geotextile material") +
theme(plot.title = element_text(hjust = 0.5)) +
xlab("Extension (mm)") +
ylab("Load (N)")
ggplot() +
geom_point(df_266, aes(x = mm, y = N), color = "blue")
ggplot() +
geom_point(data = df_266, aes(x = mm, y = N, color = "red"), size = 0.7) +
geom_point(data = df_267, aes(x = mm, y = N, color = "blue"), size = 0.7)
ggplot() +
geom_point(data = df_266, aes(x = mm, y = N, color = "red"), size = 0.7) +
geom_point(data = df_267, aes(x = mm, y = N, color = "blue"), size = 0.7) +
geom_point(data = df_268, aes(x = mm, y = N, color = "green"), size = 0.7)
df_269 <- read.csv("266.csv", skip = 7)
df_271 <- read.csv("267.csv", skip = 7)
df_272 <- read.csv("268.csv", skip = 7)
ggplot() +
geom_point(data = df_269, aes(x = mm, y = N, color = "red"), size = 0.7) +
geom_point(data = df_271, aes(x = mm, y = N, color = "blue"), size = 0.7) +
geom_point(data = df_272, aes(x = mm, y = N, color = "green"), size = 0.7)
df_269 <- read.csv("269.csv", skip = 7)
df_271 <- read.csv("271.csv", skip = 7)
df_272 <- read.csv("272.csv", skip = 7)
ggplot() +
geom_point(data = df_269, aes(x = mm, y = N, color = "red"), size = 0.7) +
geom_point(data = df_271, aes(x = mm, y = N, color = "blue"), size = 0.7) +
geom_point(data = df_272, aes(x = mm, y = N, color = "green"), size = 0.7)
df_269 <- read.csv("274.csv", skip = 7)
df_271 <- read.csv("276.csv", skip = 7)
df_272 <- read.csv("277.csv", skip = 7)
ggplot() +
geom_point(data = df_269, aes(x = mm, y = N, color = "red"), size = 0.7) +
geom_point(data = df_271, aes(x = mm, y = N, color = "blue"), size = 0.7) +
geom_point(data = df_272, aes(x = mm, y = N, color = "green"), size = 0.7)
df_269 <- read.csv("278.csv", skip = 7)
df_271 <- read.csv("279.csv", skip = 7)
df_272 <- read.csv("280.csv", skip = 7)
ggplot() +
geom_point(data = df_269, aes(x = mm, y = N, color = "red"), size = 0.7) +
geom_point(data = df_271, aes(x = mm, y = N, color = "blue"), size = 0.7) +
geom_point(data = df_272, aes(x = mm, y = N, color = "green"), size = 0.7)
df_269 <- read.csv("284.csv", skip = 7)
df_271 <- read.csv("285.csv", skip = 7)
df_272 <- read.csv("286.csv", skip = 7)
ggplot() +
geom_point(data = df_269, aes(x = mm, y = N, color = "red"), size = 0.7) +
geom_point(data = df_271, aes(x = mm, y = N, color = "blue"), size = 0.7) +
geom_point(data = df_272, aes(x = mm, y = N, color = "green"), size = 0.7)
df_269 <- read.csv("287.csv", skip = 7)
df_271 <- read.csv("288.csv", skip = 7)
df_272 <- read.csv("289.csv", skip = 7)
ggplot() +
geom_point(data = df_269, aes(x = mm, y = N, color = "red"), size = 0.7) +
geom_point(data = df_271, aes(x = mm, y = N, color = "blue"), size = 0.7) +
geom_point(data = df_272, aes(x = mm, y = N, color = "green"), size = 0.7)
df_269 <- read.csv("308.csv", skip = 7)
df_271 <- read.csv("309.csv", skip = 7)
df_272 <- read.csv("310.csv", skip = 7)
ggplot() +
geom_point(data = df_269, aes(x = mm, y = N, color = "red"), size = 0.7) +
geom_point(data = df_271, aes(x = mm, y = N, color = "blue"), size = 0.7) +
geom_point(data = df_272, aes(x = mm, y = N, color = "green"), size = 0.7)
df_269 <- read.csv("296.csv", skip = 7)
df_271 <- read.csv("297.csv", skip = 7)
df_272 <- read.csv("298.csv", skip = 7)
ggplot() +
geom_point(data = df_269, aes(x = mm, y = N, color = "red"), size = 0.7) +
geom_point(data = df_271, aes(x = mm, y = N, color = "blue"), size = 0.7) +
geom_point(data = df_272, aes(x = mm, y = N, color = "green"), size = 0.7)
list.dirs()
path <- "C:/Users/tao_1/OneDrive/Documents/Fall2021/ABE305_Final_Project/Data"
print(i)
for (i in path) {
print(i)
}
list.files(path=".", pattern=".pdf", all.files=TRUE,
full.names=TRUE)
list.files(path=".", pattern=".csv", all.files=TRUE,
full.names=TRUE)
list.file <- list.files(path=".", pattern=".csv", all.files=TRUE,
full.names=TRUE)
list.file[1]
list.file <- list.files(pattern=".csv", all.files=TRUE,
full.names=TRUE)
list.file[1]
print(i)
list.df <- list()
for (i in length(list.file)) {
print(i)
}
for (i in 1;length(list.file)) {
print(i)
}
for (i in 1:length(list.file)) {
print(i)
}
list.file[1][3:]
list.file[1][3]
list.file[1]
substr(list.file[1], 3, 6)
file.name <- toString(substr(list.file[1], 3, 5)) + ".csv"
print(file.name)
list.df <- list()
for (i in 1:length(list.file)) {
file.name <- toString(substr(list.file[1], 3, 5))
print(file.name)
list.df[i] <- read.csv(substr(list.file[1], 3, 5), skip = 7)
}
file.name <- paste(toString(substr(list.file[1], 3, 5)), ".csv")
for (i in 1:length(list.file)) {
file.name <- paste(toString(substr(list.file[1], 3, 5)), ".csv")
print(file.name)
list.df[i] <- read.csv(substr(list.file[1], 3, 5), skip = 7)
}
for (i in 1:length(list.file)) {
file.name <- paste(toString(substr(list.file[1], 3, 5)), ".csv")
print(file.name)
list.df[i] <- read.csv(file.name, skip = 7)
}
file.name <- paste(toString(substr(list.file[1], 3, 5)), ".csv", sep = "")
print(file.name)
list.df <- list()
for (i in 1:length(list.file)) {
file.name <- paste(toString(substr(list.file[1], 3, 5)), ".csv", sep = "")
print(file.name)
list.df[i] <- read.csv(file.name, skip = 7)
}
list.df <- list()
for (i in 1:length(list.file)) {
file.name <- paste(toString(substr(list.file[i], 3, 5)), ".csv", sep = "")
print(file.name)
list.df[i] <- read.csv(file.name, skip = 7)
}
View(list.df)
View(list.df)
View(df_266)
View(df_266)
df_319 <- read.csv("319.csv", skip = 7)
ggplot() +
geom_point(data = df_319, aes(x = mm, y = N, color = "red"), size = 0.7) +
geom_point(data = df_271, aes(x = mm, y = N, color = "blue"), size = 0.7) +
geom_point(data = df_272, aes(x = mm, y = N, color = "green"), size = 0.7)
geom_point(data = df_271, aes(x = mm, y = N, color = "blue"), size = 0.7) +
#
ggplot() +
geom_point(data = df_319, aes(x = mm, y = N, color = "red"), size = 0.7)
#geom_point(data = df_271, aes(x = mm, y = N, color = "blue"), size = 0.7) +
#geom_point(data = df_272, aes(x = mm, y = N, color = "green"), size = 0.7)
ggplot(df_319, aes(x = mm, y = N)) + geom_point()
#geom_point(data = df_271, aes(x = mm, y = N, color = "blue"), size = 0.7) +
#geom_point(data = df_272, aes(x = mm, y = N, color = "green"), size = 0.7)
ggplot(df_272, aes(x = mm, y = N)) + geom_point()
#geom_point(data = df_271, aes(x = mm, y = N, color = "blue"), size = 0.7) +
#geom_point(data = df_272, aes(x = mm, y = N, color = "green"), size = 0.7)
ggplot(df_271, aes(x = mm, y = N)) + geom_point()
